# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool: test
variables:
       - name: System.Debug
         value: true

steps:

    
- task: JfrogCliV2@1
  inputs:
    jfrogPlatformConnection: 'myjfrog'
    command: 'jf rt atc'
    arguments: '--output-file=./output.txt'
  displayName: 'Run JFrog CLI Command'

- script: |
    echo "Extracting access token..."
    TOKEN=$(cat ./output.txt | grep "access_token" | cut -d '"' -f4)
    echo "##vso[task.setvariable variable=ARTIFACTORY_TOKEN]$TOKEN"
  displayName: 'Set Access Token Environment Variable'

- script: |
    echo "Downloading file from JFrog Artifactory..."
    curl -H "Authorization: Bearer $(ARTIFACTORY_TOKEN)" -O "https://gpgtest.jfrog.io/artifactory/test-gradle-dev-local/insights%20(1).har"
  displayName: 'Download File from Artifactory'



